import { Canvas } from '@react-three/fiber'
import { OrbitControls, Stats, Environment, useProgress, Html, useDetectGPU } from '@react-three/drei'
import { Suspense } from 'react'


import { SplatStandardMaterial } from './three-landscape/SplatMaterial'
import { useProgressiveTextures } from './three-landscape/useProgressiveTexture'

const Terrain = () => {
  const GPUTier = useDetectGPU()
  const lowPowerDevice = GPUTier.tier === '0' || GPUTier.isMobile
  const detail = lowPowerDevice ? 32 : 8
  const [highestQualityLoaded, textures] = useProgressiveTextures([
    [
      '/hd/heightmap.png',
      '/hd/normalmap_y@0.5.basis',
      '/simplex-noise.png',
      '/Assets/Cliffs_02/Rock_DarkCrackyCliffs_col.jpg',
      '/Assets/Cliffs_02/Rock_DarkCrackyCliffs_norm.jpg',
      '/Assets/Rock_04/Rock_sobermanRockWall_col.jpg',
      '/Assets/Rock_04/Rock_sobermanRockWall_norm.jpg',
      '/Assets/Mud_03/Ground_WetBumpyMud_col.jpg',
      '/Assets/Mud_03/Ground_WetBumpyMud_norm.jpg',
      '/Assets/Grass_020/ground_Grass1_col.jpg',
      '/hd/splatmap_00@0.5.png',
      '/hd/splatmap_01@0.5.png'
    ],
    [
      '/hd/heightmap.png',
      '/hd/normalmap_y.basis',
      '/simplex-noise.png',
      '/Assets/Cliffs_02/Rock_DarkCrackyCliffs_col.jpg',
      '/Assets/Cliffs_02/Rock_DarkCrackyCliffs_norm.jpg',
      '/Assets/Rock_04/Rock_sobermanRockWall_col.jpg',
      '/Assets/Rock_04/Rock_sobermanRockWall_norm.jpg',
      '/Assets/Mud_03/Ground_WetBumpyMud_col.jpg',
      '/Assets/Mud_03/Ground_WetBumpyMud_norm.jpg',
      '/Assets/Grass_020/ground_Grass1_col.jpg',
      '/hd/splatmap_00.png',
      '/hd/splatmap_01.png'
    ]
  ])

  const [displacement, normal, noise, d1, n1, d2, n2, d3, n3, d4, splat1, splat2] = textures[highestQualityLoaded]

  const { width, height } = displacement.image

  return (
    <mesh position={[0, 0, 0]} rotation={[-Math.PI / 2, 0, 0]}>
      <planeBufferGeometry args={[100, 100, width / detail, height / detail]} />
      <SplatStandardMaterial
        normalMap={normal}
        splats={[splat1, splat2]}
        normalMaps={[n1, n2, n3]}
        normalWeights={[0.75, 0.75, 0.75]}
        diffuseMaps={[d1, d2, d3, d4, d4, d3]}
        scale={[128 / 4, 128 / 2, 128, 128 * 2, 128, 128, 10]}
        saturation={[1.1, 1.1, 1.1, 1.2, 1.1, 1.1]}
        brightness={[0.0, 0.0, 0.0, -0.075, -0.075, 0.0]}
        noise={noise}
        displacementMap={displacement}
        displacementScale={10}
        displacementBias={-10}
        envMapIntensity={0.5}
      />
    </mesh>
  )
}

export default Terrain