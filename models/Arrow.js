/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import  { useRef,useState } from 'react'
import { useGLTF,useMatcapTexture } from '@react-three/drei'

export default function Model(props) {
  const [hovered,hover]=useState(false)
  const [matcapArrow] = useMatcapTexture('54C104_BBFA0F_97EF04_7AE104')
  const [matcapArrowHover] = useMatcapTexture('9B4816_E8A138_CC7421_DC8827' )

  const group = useRef()
  const { nodes, materials } = useGLTF('/Models/Arrow.glb')
  console.log(nodes)
  return (
    <group ref={group} {...props} dispose={null}>
      
      <mesh geometry={nodes.Arrow.geometry} 
        onPointerOver={(event) => hover(true)}
        onPointerOut={(event) => hover(false)}
        
      >
        <meshMatcapMaterial attach="material"  matcap={hovered?matcapArrow:matcapArrowHover} />
      </mesh>

    </group>
  )
}

useGLTF.preload('/Models/Arrow.glb')
