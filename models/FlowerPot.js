/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from 'react'
import { useGLTF,Merged } from '@react-three/drei'
import { useStore } from '@/store/Store'
import { CELL_SIZE } from 'constants'
export default function Model(props) {
  const {mapMaterial}=useStore(state=>state.maps)
  const { nodes, materials } = useGLTF('/Models/Decoration/FlowerPot.glb')
  
    return (
      <Merged meshes={nodes}>
        {({ Flowerpot }) => mapMaterial[5].map((value,index)=> <Flowerpot position={value.position} rotation={value.rotation} key={index}/>)
    
          
        }
      </Merged>
    )


  /*
      const flowerMesh= mapMaterial[5].map((value,index)=>
        
            <group key={index} >
            <FlowerPot position={[(value.x+.5)*CELL_SIZE, 2,(value.z+.5)*CELL_SIZE]} scale={3} key={index}/>
        </group>
        
  return (

          <mesh {...props} geometry={nodes.FlowerPot__0.geometry} material={materials['Scene_-_Root']} />
    )*/
}

useGLTF.preload('/Models/Decoration/FlowerPot.glb')
